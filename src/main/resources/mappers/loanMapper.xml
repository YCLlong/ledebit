<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ledebit.dao.loanMapper" >
  <resultMap id="BaseResultMap" type="com.ledebit.pojo.loan" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="record_no" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="debitid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="debitname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="de_kind" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="de_time" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="de_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="cr_deadline" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="cr_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="de_repayed" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="recordstatus" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pushstatus" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, record_no, debitid, debitname, de_kind, de_time, de_amount, cr_deadline, cr_amount, de_repayed,
    create_time, update_time, recordstatus, pushstatus
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ledebit.pojo.loan" >
    insert into loan (id, record_no, debitId, debitname,
      de_kind, de_time, de_amount, 
      cr_deadline, cr_amount, de_repayed, 
      create_time, update_time, recordstatus, 
      pushstatus)
    values (#{id,jdbcType=INTEGER}, #{recordNo,jdbcType=BIGINT}, #{debitId,jdbcType=INTEGER}, #{debitname,jdbcType=VARCHAR},
      #{deKind,jdbcType=INTEGER}, #{deTime,jdbcType=DATE}, #{deAmount,jdbcType=DECIMAL},
      #{crDeadline,jdbcType=DATE}, #{crAmount,jdbcType=DECIMAL}, #{deRepayed,jdbcType=DECIMAL}, 
      now(), now(), #{recordstatus,jdbcType=INTEGER},
      #{pushstatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ledebit.pojo.loan" >
    insert into loan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="recordNo != null" >
        record_no,
      </if>
      <if test="debitId != null">
        debitid,
      </if>
      <if test="debitname != null" >
        debitname,
      </if>
      <if test="deKind != null" >
        de_kind,
      </if>
      <if test="deTime != null" >
        de_time,
      </if>
      <if test="deAmount != null" >
        de_amount,
      </if>
      <if test="crDeadline != null" >
        cr_deadline,
      </if>
      <if test="crAmount != null" >
        cr_amount,
      </if>
      <if test="deRepayed != null" >
        de_repayed,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="recordstatus != null" >
        recordstatus,
      </if>
      <if test="pushstatus != null" >
        pushstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordNo != null" >
        #{recordNo,jdbcType=BIGINT},
      </if>
      <if test="debitId !=null">
        #{debitId,jdbcType=INTEGER},
      </if>
      <if test="debitname != null" >
        #{debitname,jdbcType=VARCHAR},
      </if>
      <if test="deKind != null" >
        #{deKind,jdbcType=INTEGER},
      </if>
      <if test="deTime != null" >
        #{deTime,jdbcType=DATE},
      </if>
      <if test="deAmount != null" >
        #{deAmount,jdbcType=DECIMAL},
      </if>
      <if test="crDeadline != null" >
        #{crDeadline,jdbcType=DATE},
      </if>
      <if test="crAmount != null" >
        #{crAmount,jdbcType=DECIMAL},
      </if>
      <if test="deRepayed != null" >
        #{deRepayed,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
      <if test="recordstatus != null" >
        #{recordstatus,jdbcType=INTEGER},
      </if>
      <if test="pushstatus != null" >
        #{pushstatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ledebit.pojo.loan" >
    update loan
    <set >
      <if test="recordNo != null" >
        record_no = #{recordNo,jdbcType=BIGINT},
      </if>
      <if test="debitId != null" >
        debitid = #{debitId,jdbcType=INTEGER},
      </if>
      <if test="debitname != null" >
        debitname = #{debitname,jdbcType=VARCHAR},
      </if>
      <if test="deKind != null" >
        de_kind = #{deKind,jdbcType=INTEGER},
      </if>
      <if test="deTime != null" >
        de_time = #{deTime,jdbcType=DATE},
      </if>
      <if test="deAmount != null" >
        de_amount = #{deAmount,jdbcType=DECIMAL},
      </if>
      <if test="crDeadline != null" >
        cr_deadline = #{crDeadline,jdbcType=DATE},
      </if>
      <if test="crAmount != null" >
        cr_amount = #{crAmount,jdbcType=DECIMAL},
      </if>
      <if test="deRepayed != null" >
        de_repayed = #{deRepayed,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
      <if test="recordstatus != null" >
        recordstatus = #{recordstatus,jdbcType=INTEGER},
      </if>
      <if test="pushstatus != null" >
        pushstatus = #{pushstatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ledebit.pojo.loan" >
    update loan
    set record_no = #{recordNo,jdbcType=BIGINT},
      debitid = #{debitId,jdbcType=INTEGER},
      debitname = #{debitname,jdbcType=VARCHAR},
      de_kind = #{deKind,jdbcType=INTEGER},
      de_time = #{deTime,jdbcType=DATE},
      de_amount = #{deAmount,jdbcType=DECIMAL},
      cr_deadline = #{crDeadline,jdbcType=DATE},
      cr_amount = #{crAmount,jdbcType=DECIMAL},
      de_repayed = #{deRepayed,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      now(),
      recordstatus = #{recordstatus,jdbcType=INTEGER},
      pushstatus = #{pushstatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectallfromloan" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from loan
    order by record_no DESC
  </select>
  <select id="selectByLoanidandDebitname" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from loan
    <where>
      <if test="debitid != null">
        and debitid = #{debitid}
      </if>
      <if test="debitname != null">
        and debitname LIKE #{debitname}
      </if>
    </where>
  </select>
  <update id="updatestatus" parameterType="map">
    UPDATE loan
    set recordstatus = #{status,jdbcType=INTEGER}
    where
    id = #{loanid,jdbcType=INTEGER}
  </update>
  <select id="checkno" parameterType="java.lang.Long" resultType="java.lang.Integer">
    SELECT
    count(1)
    from loan
    where record_no = #{recordno}
  </select>
  <select id="selectbydebitid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM loan
    WHERE debitid = #{debitid}
  </select>
  <select id="selectoverduefromloan" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from loan
    WHERE
    recordstatus = #{status}
    order by record_no DESC
  </select>
</mapper>